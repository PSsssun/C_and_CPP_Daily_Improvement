#include <iostream>
using namespace std;
#include<string>

//c++利用了构造函数和析构函数 解决了以下问题
//这2个函数会被编译器自动调用，完成对象初始化和清理工作
//对象的初始化和清理工作是编译器强制我们需要做的事情
//如果我们不提供析构和构造，编译器会提供编译器提供的构造函数和析构函数是空实现的
//析造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用
//析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作


class Person
{

	//析造函数语法 类名(){}
	//1.构造函数， 没有返回值也不写void
	//2.函数名称与类名相同
	//3.构造函数可以有参数,因此可以发送重载
	//4.程序在调用对象时候会自动调用构造，无须手动调用，而且只调用一次
public:
	Person()
	{
		cout << "Person构造函数的调用" << endl;
	}

	//析构函数语法 ~类名(){}
	//1.析构函数，没有返回值也不写void
	//2.函数名称与类名相同，在名称前面加上符号
	//3.析构函数不可以有参数，因此不可以发生重载
	//4.程序在对象销毁前会自动调用析构，无须手动调用，而且只会调用一次

	~Person()
	{
		cout << "Person析构函数的调用" << endl;
	}

};

void test01()
{
	Person p;
}


int main()
{
	//test01();
	Person p;

	system("pause");
	return 0;
}
